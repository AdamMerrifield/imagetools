{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/index.ts"],"sourcesContent":["import { createHash } from 'node:crypto'\nimport path from 'node:path'\nimport { statSync } from 'node:fs'\nimport type { ImageConfig } from 'imagetools-core'\nimport { createReadStream } from 'node:fs'\n\nexport const createBasePath = (base?: string) => {\n  return (base?.replace(/\\/$/, '') || '') + '/@imagetools/'\n}\n\nexport async function generateImageID(url: URL, config: ImageConfig, imageBuffer: Buffer) {\n  if (url.host) {\n    const baseURL = new URL(url.origin + url.pathname)\n    return hash([baseURL.href, JSON.stringify(config), imageBuffer])\n  }\n\n  // baseURL isn't a valid URL, but just a string used for an identifier\n  // use a relative path in the local case so that it's consistent across machines\n  const baseURL = new URL(url.protocol + path.relative(process.cwd(), url.pathname))\n  const { mtime } = statSync(path.resolve(process.cwd(), decodeURIComponent(url.pathname)))\n  return hash([baseURL.href, JSON.stringify(config), mtime.getTime().toString()])\n}\n\nfunction hash(keyParts: Array<string | NodeJS.ArrayBufferView>) {\n  let hash = createHash('sha1')\n  for (const keyPart of keyParts) {\n    hash = hash.update(keyPart)\n  }\n  return hash.digest('hex')\n}\n\nexport const generateCacheID = (path: string) => createHash('sha1').update(path).digest('hex')\n\nexport const checksumFile = (algorithm: string, path: string) => {\n  return new Promise<string>(function (resolve, reject) {\n    const hash = createHash(algorithm).setEncoding('hex')\n    createReadStream(path)\n      .pipe(hash)\n      .on('error', reject)\n      .on('finish', () => {\n        hash.end()\n        resolve(hash.digest('hex'))\n      })\n  })\n}\n","import { basename, extname } from 'node:path'\nimport { createReadStream, existsSync } from 'node:fs'\nimport { mkdir, opendir, readFile, rm, stat, utimes, writeFile } from 'node:fs/promises'\nimport type { Plugin, ResolvedConfig } from 'vite'\nimport {\n  applyTransforms,\n  builtins,\n  builtinOutputFormats,\n  extractEntries,\n  generateTransforms,\n  getMetadata,\n  parseURL,\n  urlFormat,\n  resolveConfigs,\n  type Logger,\n  type OutputFormat,\n  type ProcessedImageMetadata\n} from 'imagetools-core'\nimport { createFilter, dataToEsm } from '@rollup/pluginutils'\nimport sharp, { type Metadata, type Sharp } from 'sharp'\nimport { checksumFile, createBasePath, generateCacheID, generateImageID } from './utils.js'\nimport type { VitePluginOptions } from './types.js'\n\nexport type {\n  Include,\n  Exclude,\n  DefaultDirectives,\n  ExtendTransforms,\n  ExtendOutputFormats,\n  ResolveConfigs,\n  VitePluginOptions\n} from './types.js'\n\nconst defaultOptions: VitePluginOptions = {\n  include: /^[^?]+\\.(avif|gif|heif|jpeg|jpg|png|tiff|webp)(\\?.*)?$/,\n  exclude: 'public/**/*',\n  removeMetadata: true,\n  cacheRetention: 86400\n}\n\ninterface ProcessedCachableImageMetadata extends ProcessedImageMetadata {\n  imagePath?: string\n}\n\nexport * from 'imagetools-core'\n\nexport function imagetools(userOptions: Partial<VitePluginOptions> = {}): Plugin {\n  const pluginOptions: VitePluginOptions = { ...defaultOptions, ...userOptions }\n\n  const filter = createFilter(pluginOptions.include, pluginOptions.exclude)\n\n  const transformFactories = pluginOptions.extendTransforms ? pluginOptions.extendTransforms(builtins) : builtins\n\n  const outputFormats: Record<string, OutputFormat> = pluginOptions.extendOutputFormats\n    ? pluginOptions.extendOutputFormats(builtinOutputFormats)\n    : builtinOutputFormats\n\n  let viteConfig: ResolvedConfig\n  let basePath: string\n\n  const processPath = process.cwd()\n\n  const generatedImages = new Map<string, Sharp | ProcessedCachableImageMetadata>()\n\n  const isSharp = (image: Sharp | ProcessedCachableImageMetadata): image is Sharp => typeof image.clone === 'function'\n\n  return {\n    name: 'imagetools',\n    enforce: 'pre',\n    configResolved(cfg) {\n      viteConfig = cfg\n      basePath = createBasePath(viteConfig.base)\n    },\n    async load(id) {\n      if (!filter(id)) return null\n\n      const srcURL = parseURL(id)\n      const pathname = decodeURIComponent(srcURL.pathname)\n\n      // lazy loaders so that we can load the metadata in defaultDirectives if needed\n      // but if there are no directives then we can just skip loading\n      let lazyImg: Sharp\n      const lazyLoadImage = () => {\n        if (lazyImg) return lazyImg\n        return (lazyImg = sharp(pathname))\n      }\n\n      let lazyMetadata: Metadata\n      const lazyLoadMetadata = async () => {\n        if (lazyMetadata) return lazyMetadata\n        return (lazyMetadata = await lazyLoadImage().metadata())\n      }\n\n      const defaultDirectives =\n        typeof pluginOptions.defaultDirectives === 'function'\n          ? await pluginOptions.defaultDirectives(srcURL, lazyLoadMetadata)\n          : pluginOptions.defaultDirectives || new URLSearchParams()\n      const directives = new URLSearchParams({\n        ...Object.fromEntries(defaultDirectives),\n        ...Object.fromEntries(srcURL.searchParams)\n      })\n\n      if (!directives.toString()) return null\n\n      const outputMetadatas: Array<ProcessedImageMetadata> = []\n\n      const logger: Logger = {\n        info: (msg) => viteConfig.logger.info(msg),\n        warn: (msg) => this.warn(msg),\n        error: (msg) => this.error(msg)\n      }\n\n      const relativeID = id.startsWith(processPath) ? id.slice(processPath.length + 1) : id\n      const cacheID = pluginOptions.cacheDir ? generateCacheID(relativeID) : undefined\n      if (cacheID && pluginOptions.cacheDir && existsSync(`${pluginOptions.cacheDir}/${cacheID}/index.json`)) {\n        try {\n          const srcChecksum = await checksumFile('sha1', pathname)\n          const { checksum, metadatas } = JSON.parse(\n            await readFile(`${pluginOptions.cacheDir}/${cacheID}/index.json`, { encoding: 'utf8' })\n          )\n\n          if (srcChecksum === checksum) {\n            const date = new Date()\n            utimes(`${pluginOptions.cacheDir}/${cacheID}/index.json`, date, date)\n\n            for (const metadata of metadatas) {\n              if (viteConfig.command === 'serve') {\n                const imageID = metadata.imageID\n                generatedImages.set(imageID, metadata)\n                metadata.src = basePath + imageID\n              } else {\n                const fileHandle = this.emitFile({\n                  name: basename(pathname, extname(pathname)) + `.${metadata.format}`,\n                  source: await readFile(metadata.imagePath),\n                  type: 'asset'\n                })\n\n                metadata.src = `__VITE_ASSET__${fileHandle}__`\n              }\n\n              outputMetadatas.push(metadata)\n            }\n          }\n        } catch (e) {\n          console.error('cache error:', e)\n          outputMetadatas.length = 0\n        }\n      }\n\n      if (!outputMetadatas.length) {\n        const img = lazyLoadImage()\n        const widthParam = directives.get('w')\n        const heightParam = directives.get('h')\n        if (directives.get('allowUpscale') !== 'true' && (widthParam || heightParam)) {\n          const metadata = await lazyLoadMetadata()\n          const clamp = (s: string, intrinsic: number) =>\n            [...new Set(s.split(';').map((d): string => (parseInt(d) <= intrinsic ? d : intrinsic.toString())))].join(\n              ';'\n            )\n\n          if (widthParam) {\n            const intrinsicWidth = metadata.width || 0\n            directives.set('w', clamp(widthParam, intrinsicWidth))\n          }\n\n          if (heightParam) {\n            const intrinsicHeight = metadata.height || 0\n            directives.set('h', clamp(heightParam, intrinsicHeight))\n          }\n        }\n\n        const parameters = extractEntries(directives)\n        const imageConfigs =\n          pluginOptions.resolveConfigs?.(parameters, outputFormats) ?? resolveConfigs(parameters, outputFormats)\n\n        for (const config of imageConfigs) {\n          const { transforms } = generateTransforms(config, transformFactories, srcURL.searchParams, logger)\n          const { image, metadata } = await applyTransforms(transforms, img.clone(), pluginOptions.removeMetadata)\n          const imageBuffer = await image.toBuffer()\n          const imageID = await generateImageID(srcURL, config, imageBuffer)\n\n          if (viteConfig.command === 'serve') {\n            generatedImages.set(imageID, image)\n            metadata.src = basePath + imageID\n          } else {\n            const fileHandle = this.emitFile({\n              name: basename(pathname, extname(pathname)) + `.${metadata.format}`,\n              source: imageBuffer,\n              type: 'asset'\n            })\n\n            metadata.src = `__VITE_ASSET__${fileHandle}__`\n          }\n\n          metadata.imageID = imageID\n          metadata.image = image\n\n          outputMetadatas.push(metadata as ProcessedImageMetadata)\n        }\n\n        if (pluginOptions.cacheDir) {\n          const relativeID = id.startsWith(processPath) ? id.slice(processPath.length + 1) : id\n          const cacheID = generateCacheID(relativeID)\n          try {\n            const checksum = await checksumFile('sha1', pathname)\n            await mkdir(`${pluginOptions.cacheDir}/${cacheID}`, { recursive: true })\n            await Promise.all(\n              outputMetadatas.map(async (metadata) => {\n                const { format, image, imageID } = metadata\n                const imagePath = `${pluginOptions.cacheDir}/${cacheID}/${imageID}.${format}`\n                if (image) await writeFile(imagePath, await image.toBuffer())\n                metadata.imagePath = imagePath\n                if (viteConfig.command === 'serve') {\n                  generatedImages.set(id, metadata)\n                }\n              })\n            )\n            await writeFile(\n              `${pluginOptions.cacheDir}/${cacheID}/index.json`,\n              JSON.stringify({\n                checksum,\n                created: Date.now(),\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                metadatas: outputMetadatas.map(({ src, image, ...metadata }) => metadata)\n              }),\n              { encoding: 'utf8' }\n            )\n          } catch (e) {\n            console.debug(`failed to create cache for ${cacheID}`)\n            await rm(`${pluginOptions.cacheDir}/${cacheID}`, { recursive: true })\n          }\n        }\n      }\n\n      let outputFormat = urlFormat()\n      const asParam = directives.get('as')?.split(':')\n      const as = asParam ? asParam[0] : undefined\n      for (const [key, format] of Object.entries(outputFormats)) {\n        if (as === key) {\n          outputFormat = format(asParam && asParam[1] ? asParam[1].split(';') : undefined)\n          break\n        }\n      }\n\n      return dataToEsm(await outputFormat(outputMetadatas), {\n        namedExports: pluginOptions.namedExports ?? viteConfig.json?.namedExports ?? true,\n        compact: !!viteConfig.build.minify ?? false,\n        preferConst: true\n      })\n    },\n\n    configureServer(server) {\n      server.middlewares.use((req, res, next) => {\n        if (req.url?.startsWith(basePath)) {\n          const [, id] = req.url.split(basePath)\n\n          const image = generatedImages.get(id)\n\n          if (!image)\n            throw new Error(`vite-imagetools cannot find image with id \"${id}\" this is likely an internal error`)\n\n          res.setHeader('Cache-Control', 'max-age=360000')\n\n          if (isSharp(image)) {\n            if (pluginOptions.removeMetadata === false) {\n              image.withMetadata()\n            }\n\n            res.setHeader('Content-Type', `image/${getMetadata(image, 'format')}`)\n            return image.clone().pipe(res)\n          } else if (image.imagePath) {\n            res.setHeader('Content-Type', `image/${image.format}`)\n            return createReadStream(image.imagePath).pipe(res)\n          } else {\n            throw new Error(`vite-imagetools cannot find image with id \"${id}\" this is likely an internal error`)\n          }\n        }\n\n        next()\n      })\n    },\n\n    async buildEnd(error) {\n      if (!error && pluginOptions.cacheDir && pluginOptions.cacheRetention && viteConfig.command !== 'serve') {\n        const dir = await opendir(pluginOptions.cacheDir)\n        for await (const dirent of dir) {\n          if (dirent.isDirectory()) {\n            const cacheDir = `${pluginOptions.cacheDir}/${dirent.name}`\n            try {\n              const stats = await stat(`${cacheDir}/index.json`)\n              if (Date.now() - stats.mtimeMs > pluginOptions.cacheRetention * 1000) {\n                console.debug(`deleting stale cache dir ${dirent.name}`)\n                await rm(cacheDir, { recursive: true })\n              }\n            } catch (e) {\n              console.debug(`deleting invalid cache dir ${dirent.name}`)\n              await rm(cacheDir, { recursive: true })\n            }\n          }\n        }\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}